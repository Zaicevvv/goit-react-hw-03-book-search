{"version":3,"sources":["components/SearchForm/SearchForm.js","components/BookListItem/BookListItem.js","components/BookList/BookList.js","components/Loader/Loader.js","components/services/api.js","components/App.js","index.js"],"names":["SearchForm","state","query","genre","handleChange","e","_this","setState","target","value","handleSelect","option","handleSubmit","preventDefault","props","onSubmit","Object","objectSpread","_this$state","this","genres","react_default","a","createElement","onChange","react_select_browser_esm","options","placeholder","type","onClick","Component","BookListItem","_ref","title","authors","publisher","publishedDate","pageCount","rating","url","react","src","alt","defaultProps","BookList","items","map","item","key","id","components_BookListItem_BookListItem","Loader","fetchBooks","subject","axios","get","concat","mapper","books","book","volumeInfo","imageLinks","smallThumbnail","App","isLoading","error","fetchBook","api","then","_ref2","data","catch","finally","SearchForm_SearchForm","message","components_Loader_Loader","length","components_BookList_BookList","ReactDOM","render","App_App","document","querySelector"],"mappings":"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","file":"static/js/main.0a9f5a56.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\n\nexport default class SearchForm extends Component {\n  state = { query: '', genre: '' };\n\n  handleChange = e => {\n    this.setState({ query: e.target.value });\n  };\n\n  handleSelect = option => {\n    this.setState({ genre: option });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit({ ...this.state });\n    this.setState({ query: '' });\n  };\n\n  render() {\n    const { query, genre } = this.state;\n    const { genres } = this.props;\n    return (\n      <form>\n        <input value={query} onChange={this.handleChange} />\n        <Select\n          options={genres}\n          placeholder=\"Select genre...\"\n          onChange={this.handleSelect}\n          value={genre}\n        />\n        <button type=\"button\" onClick={this.handleSubmit}>\n          Search\n        </button>\n      </form>\n    );\n  }\n}\n\nSearchForm.propTypes = {\n  genres: PropTypes.arrayOf(Object).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst BookListItem = ({\n  title,\n  authors,\n  publisher,\n  publishedDate,\n  pageCount,\n  rating,\n  url,\n}) => {\n  return (\n    <Fragment>\n      <img src={url} alt=\"img\" />\n      <div>\n        <h2>{title}</h2>\n        <p>Authors:{authors}</p>\n        <p>Publisher:{publisher}</p>\n        <p>PublishedDate:{publishedDate}</p>\n        <p>PageCount:{pageCount}</p>\n        <p>Rating:{rating}</p>\n      </div>\n    </Fragment>\n  );\n};\n\nBookListItem.defaultProps = {\n  rating: 0,\n  publisher: ' no publisher',\n};\n\nBookListItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  authors: PropTypes.arrayOf(String).isRequired,\n  publisher: PropTypes.string,\n  publishedDate: PropTypes.string.isRequired,\n  pageCount: PropTypes.number.isRequired,\n  rating: PropTypes.number,\n};\n\nexport default BookListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BookListItem from '../BookListItem/BookListItem';\n\nconst BookList = ({ items }) => (\n  <ul>\n    {items.map(item => (\n      <li key={item.id}>\n        <BookListItem {...item} />\n      </li>\n    ))}\n  </ul>\n);\n\nBookList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default BookList;\n","import React from 'react';\n\nconst Loader = () => <h1>Loading....</h1>;\n\nexport default Loader;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://www.googleapis.com/books/v1/volumes?q=';\n\nexport const fetchBooks = (query, subject) =>\n  axios.get(`${BASE_URL}${query}+subject:${subject}`);\n\nexport default fetchBooks;\n","import React, { Component, Fragment } from 'react';\nimport genres from './genres.json';\nimport SearchForm from './SearchForm/SearchForm';\nimport BookList from './BookList/BookList';\nimport Loader from './Loader/Loader';\nimport * as api from './services/api';\n\nconst mapper = books => {\n  return books.map(book => {\n    const { id } = book;\n    const { title } = book.volumeInfo;\n    const { authors } = book.volumeInfo;\n    const { publisher } = book.volumeInfo;\n    const { publishedDate } = book.volumeInfo;\n    const { pageCount } = book.volumeInfo;\n    const { rating } = book.volumeInfo;\n    const url = book.volumeInfo.imageLinks.smallThumbnail;\n    return {\n      id,\n      title,\n      authors,\n      publisher,\n      publishedDate,\n      pageCount,\n      rating,\n      url,\n    };\n  });\n};\n\nexport default class App extends Component {\n  state = {\n    books: [],\n    isLoading: false,\n    error: null,\n  };\n\n  componentDidMount() {\n    this.fetchBook({ query: 'react', genre: 'computers' });\n  }\n\n  fetchBook = ({ query, genre }) => {\n    this.setState({ isLoading: true });\n\n    api\n      .fetchBooks(query, genre)\n      .then(({ data }) => {\n        this.setState({ books: mapper(data.items) });\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  };\n\n  render() {\n    const { books, isLoading, error } = this.state;\n\n    return (\n      <Fragment>\n        <SearchForm genres={genres} onSubmit={this.fetchBook} />\n        {error && <h1>{error.message}</h1>}\n        {isLoading && <Loader />}\n        {books.length > 0 && <BookList items={books} />}\n      </Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}